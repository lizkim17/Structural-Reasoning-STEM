---
title: "Empowering Girls in STEM: The Role of Female Representation in Shaping Children's Structural Reasoning About Gender Disparities"
shorttitle: "GENDER REPRESENTATION IN STEM"
author:
  - name: Liz Kim
    corresponding: true
    email: lizkim@uchicago.edu
    affiliations:
      - name: University of Chicago
        department: Department of Psychology
        address: 5848 S University Ave
        city: Chicago
        region: IL
        country: USA
        postal-code: 60637
author-note:
  status-changes: 
    affiliation-change: ~
    deceased: ~
  disclosures:
    study-registration: ~
    data-sharing: ~
    related-report: ~
    conflict-of-interest: ~
    financial-support: ~
    gratitude: ~
    authorship-agreements: ~
abstract: "Gender bias in STEM educational materials remains a significant barrier to gender equity, with textbooks and online resources often underrepresenting female scientists. This study examines whether children recognize the lack of female scientists as a structural barrier in STEM by presenting them with two hypothetical competition scenarios: robot-building and puzzle-solving. In the robot-building scenario, 96 children aged 5â€“8 were randomly assigned to one of three conditions varying the representation of male and female scientists in textbooks. Open- and closed-ended questions assessed their reasoning about gender disparities, with the puzzle-solving competition serving as a baseline to test generalization. Findings suggest that structural explanations increased and intrinsic explanations decreased in the within condition for open-ended robot-building responses. However, a similar pattern was observed for the other conditions, although generalization across domains and closed-ended responses was not significant."
keywords: [Gender Bias in STEM, Structural Reasoning, Educational Materials]
bibliography: bibliography.bib
format:
  apaquarto-docx: default
  apaquarto-html: default
  apaquarto-pdf: 
    documentmode: man
editor:
  markdown:
    wrap: sentence
floatsintext: true
---

# Results

```{r}
#| label: Set-up
#| include: false

#install.packages("dplyr")
#install.packages("devtools")
#install.packages("car")
#install.packages("boot")
#install.packages("ggplot2")
#install.packages("lme4")
#install.packages("RColorBrewer")
#install.packages("tidyverse")
#install.packages("effectsize")
#install.packages("rcompanion")
#install.packages("nlme")
#install.packages("Hmisc")
#install.packages("flextable")

library(dplyr)
library(devtools)
library(car)
library(boot)
library(ggplot2)
library(lme4)
library(RColorBrewer)
library(tidyverse)
library(effectsize)
library(rcompanion)
library(nlme)
brewer.pal(n=9,"Pastel1")
library("Hmisc")
library(flextable)
```

```{r}
#| label: Analysis-preferences
#| include: false

# Seed for random number generation
set.seed(42)

# Set global chunk options
knitr::opts_chunk$set(
  cache.extra = knitr::rand_seed,
  fig.height = 6,
	fig.width = 7,
	message = FALSE,
	warning = FALSE,
	comment = ""
  )
```

```{r}
#| label: Dataset

library(readr)
# Read the dataset
data <- read_csv("STP2 Final Dataset.csv")
table(data$AgeYears, data$Gender)
table(data$Condition,data$AgeYears, data$Gender)
table(data$Condition)

```


```{r}
#| label: Open-Ended-Robot

# Figures for Open-Ended Explanations Measure
table(data$Condition, data$robot_OE_cat)

# Create the Data Frame
table <- data.frame(
  Condition = rep(c("Baseline", "Between", "Within"), each = 3),
  Explanation_Type = rep(c("Intrinsic", "Other", "Structural"), 3),
  value = c(27/39, 11/39, 01/39, 20/40, 9/40, 11/40, 11/40, 5/40, 24/40)
)

```

```{r}
#| label: fig-robot-plot
#| fig-cap: "Robot Building Open-Ended Explanations: Explanation Types by Condition"
#| fig-height: 4  
#| fig-width: 6  
#| apa-note: "Stacked bar chart displaying the percentage of children providing each type of explanation across three experimental conditions: Baseline, Between, and Within. The y-axis represents the proportion of children giving each explanation type, while the x-axis represents the experimental condition."

library(ggplot2)
# Stacked bar plot
ggplot(table, aes(fill = Explanation_Type, y = value, x = Condition)) + 
  geom_bar(position = "fill", stat = "identity") +
  labs(y = "Percentage of Children Providing Explanation", x = "Condition", fill = "Explanation") +
  scale_fill_manual(values = c("Intrinsic" = "#FBB4AE",
                               "Structural" = "#1F78B4",
                               "Other" = "#F2F2F2")) +
  theme_bw()

```

```{r}
# robot - Chi Square
chisq.test(data$Condition, data$robot_OE_cat)
cramerV(data$Condition, data$robot_OE_cat)
```
```{r}
# robot - data cleaning for logistic regression
data$robot.open.struc = 0
data$robot.open.struc[data$robot_OE_cat == "structural"] = 1
# structural = 1 , x structural = 0 - binary outcomes

data$robot.open.intrnsc = 0
data$robot.open.intrnsc[data$robot_OE_cat == "intrinsic"] = 1

data$robot.open.other = 0
data$robot.open.other[data$robot_OE_cat == "other"] = 1

# robot - logistic regressions
## structural
#no age or gender effect
logistic.struc <- glm(robot.open.struc ~ Condition*AgeYears*Gender, data = data, family = "binomial") 
summary(logistic.struc)
```


```{r}
#compared to baseline
data$Condition <- factor(data$Condition, levels = c("Baseline","Between", "Within"))
logistic.struc <- glm(robot.open.struc ~ Condition, data = data, family = "binomial")
summary(logistic.struc)
exp(logistic.struc$coefficients['ConditionBetween']) #odds ratio
exp(logistic.struc$coefficients['ConditionWithin']) #odds ratio
```
report value of : estimate, std. error, p value
baseline vs between & baseline vs within = both significant 

```{r}
#within compared to between
data$Condition <- factor(data$Condition, levels = c("Between", "Baseline","Within"))
logistic.struc <- glm(robot.open.struc ~ Condition, data = data, family = "binomial")
summary(logistic.struc)
```
conditionWithin (between vs within): in within, children provide more strucutral explanations

```{r}
## intrinsic
# no age or gender effect
logistic.intr <- glm(robot.open.intrnsc ~ Condition*AgeYears*Gender, data = data, family = "binomial")
summary(logistic.intr)
```


```{r}
# Compared to baseline
data$Condition <- factor(data$Condition, levels = c("Baseline", "Between", "Within"))
logistic.intr <- glm(robot.open.intrnsc ~ Condition, data = data, family = "binomial")
summary(logistic.intr)
exp(logistic.intr$coefficients['ConditionBetween'])  
exp(logistic.intr$coefficients['ConditionWithin'])  
```


```{r}
# Within compared to Between
data$Condition <- factor(data$Condition, levels = c("Between", "Baseline", "Within"))
logistic.intr <- glm(robot.open.intrnsc ~ Condition, data = data, family = "binomial")
summary(logistic.intr)
```


```{r}
## other
#no age or gender effect
logistic.other <- glm(robot.open.other ~ Condition*AgeYears*Gender, data = data, family = "binomial")
summary(logistic.other)
```


```{r}
#compared to baseline
data$Condition <- factor(data$Condition, levels = c("Baseline", "Between", "Within"))
logistic.other <- glm(robot.open.other ~ Condition, data = data, family = "binomial")
summary(logistic.other)
exp(logistic.other$coefficients['ConditionBetween']) 
exp(logistic.other$coefficients['ConditionWithin'])
```


```{r}
#within compared to between
data$Condition <- factor(data$Condition, levels = c("Between", "Baseline", "Within"))
logistic.other <- glm(robot.open.other ~ Condition, data = data, family = "binomial")
summary(logistic.other)
```

## Puzzle Solving Open-ended Questions

```{r}
#| label: Open-Ended-puzzle
#| include: false

# Figures for Open-Ended Explanations Measure
table(data$Condition, data$puzzle_OE_cat)

# Create the Data Frame
table <- data.frame(
  Condition = rep(c("Baseline", "Between", "Within"), each = 3),
  Explanation_Type = rep(c("Intrinsic", "Other", "Structural"), 3),
  value = c(33/40, 3/40, 4/40, 29/40, 7/40, 4/40, 24/40, 7/40, 9/40)
)
```

```{r}
#| label: fig-puzzle-plot
#| fig-cap: 'Puzzle Solving Open-Ended Explanations: Explanation Types by Condition' 
#| fig-height: 4  
#| fig-width: 6  
#| apa-note: "Stacked bar chart displaying the percentage of children providing each type of explanation across three experimental conditions: Baseline, Between, and Within. The y-axis represents the proportion of children giving each explanation type, while the x-axis represents the experimental condition."

# Stacked bar plot
ggplot(table, aes(fill=Explanation_Type, y=value, x=Condition)) + 
  geom_bar(position="fill", stat="identity")+
  labs(y="Percentage of Children Providing Explanation", x="Condition", fill="Explanation")+
  scale_fill_manual(values = c("Intrinsic" = "#FBB4AE",
                               "Structural"="#1F78B4",
                               "Other"="#F2F2F2"))+
  theme_bw()
```

```{r}
# puzzle - Chi Square
chisq.test(data$Condition, data$puzzle_OE_cat)
cramerV(data$Condition, data$puzzle_OE_cat)
```


```{r}
# puzzle - data cleaning for logistic regression
data$puzzle.open.struc = 0
data$puzzle.open.struc[data$puzzle_OE_cat == "structural"] = 1

data$puzzle.open.intrnsc = 0
data$puzzle.open.intrnsc[data$puzzle_OE_cat == "intrinsic"] = 1

data$puzzle.open.other = 0
data$puzzle.open.other[data$puzzle_OE_cat == "other"] = 1


# puzzle - logistic regressions
## structural
#check there's no age or gender effect
logistic.struc <- glm(puzzle.open.struc ~ Condition*AgeYears*Gender, data = data, family = "binomial") 
summary(logistic.struc)
```


```{r}
#compared to baseline
data$Condition <- factor(data$Condition, levels = c("Baseline","Between", "Within"))
logistic.struc <- glm(puzzle.open.struc ~ Condition, data = data, family = "binomial")
summary(logistic.struc)
exp(logistic.struc$coefficients['ConditionBetween']) #odds ratio
exp(logistic.struc$coefficients['ConditionWithin']) #odds ratio
```


```{r}
#within compared to between
data$Condition <- factor(data$Condition, levels = c("Between", "Baseline","Within"))
logistic.struc <- glm(puzzle.open.struc ~ Condition, data = data, family = "binomial")
summary(logistic.struc)
```


```{r}
## intrinsic
#check there's no age or gender effect
logistic.intr <- glm(puzzle.open.intrnsc ~ Condition*AgeYears*Gender, data = data, family = "binomial") 
summary(logistic.intr)
```


```{r}
#compared to baseline
data$Condition <- factor(data$Condition, levels = c("Baseline","Between", "Within"))
logistic.intr <- glm(puzzle.open.intrnsc ~ Condition, data = data, family = "binomial")
summary(logistic.intr)
exp(logistic.intr$coefficients['ConditionBetween']) #odds ratio
exp(logistic.intr$coefficients['ConditionWithin']) #odds ratio
```


```{r}
#within compared to between
data$Condition <- factor(data$Condition, levels = c("Between", "Baseline","Within"))
logistic.intr <- glm(puzzle.open.intrnsc ~ Condition, data = data, family = "binomial")
summary(logistic.intr)
```


```{r}
## other
#check there's no age or gender effect
logistic.intr <- glm(puzzle.open.other ~ Condition*AgeYears*Gender, data = data, family = "binomial") 
summary(logistic.intr)
#compared to baseline
data$Condition <- factor(data$Condition, levels = c("Baseline","Between", "Within"))
logistic.intr <- glm(puzzle.open.other ~ Condition, data = data, family = "binomial")
summary(logistic.intr)
exp(logistic.intr$coefficients['ConditionBetween']) #odds ratio
exp(logistic.intr$coefficients['ConditionWithin']) #odds ratio
#within compared to between
data$Condition <- factor(data$Condition, levels = c("Between", "Baseline","Within"))
logistic.intr <- glm(puzzle.open.other ~ Condition, data = data, family = "binomial")
summary(logistic.intr)
```

## Robot Building Closed-ended Questions

```{r}
#| label: Closed-ended-reshaping
#| include: False

library(tidyverse)

data <- data %>%
  mutate(ID = row_number())  

data$robot_ability <-replace(data$robot_ability, data$robot_ability_r == "Really right", 4)
data$robot_ability <-replace(data$robot_ability, data$robot_ability_r == "A little right", 3)
data$robot_ability <-replace(data$robot_ability, data$robot_ability_nr == "A little not right", 2)
data$robot_ability <-replace(data$robot_ability, data$robot_ability_nr == "Really not right", 1)

data$robot_interest <-replace(data$robot_interest, data$robot_interest_r == "Really right", 4)
data$robot_interest <-replace(data$robot_interest, data$robot_interest_r == "A little right", 3)
data$robot_interest <-replace(data$robot_interest, data$robot_interest_nr == "A little not right", 2)
data$robot_interest <-replace(data$robot_interest, data$robot_interest_nr == "Really not right", 1)

data$robot_structural <-replace(data$robot_structural, data$robot_structural_r == "Really right", 4)
data$robot_structural <-replace(data$robot_structural, data$robot_structural_r == "A little right", 3)
data$robot_structural <-replace(data$robot_structural, data$robot_structural_nr == "A little not right", 2)
data$robot_structural <-replace(data$robot_structural, data$robot_structural_nr == "Really not right", 1)

data$robot_control <-replace(data$robot_control, data$robot_control_r == "Really right", 4)
data$robot_control <-replace(data$robot_control, data$robot_control_r == "A little right", 3)
data$robot_control <-replace(data$robot_control, data$robot_control_nr == "A little not right", 2)
data$robot_control <-replace(data$robot_control, data$robot_control_nr == "Really not right", 1)

data$puzzle_ability <-replace(data$puzzle_ability, data$puzzle_ability_r == "Really right", 4)
data$puzzle_ability <-replace(data$puzzle_ability, data$puzzle_ability_r == "A little right", 3)
data$puzzle_ability <-replace(data$puzzle_ability, data$puzzle_ability_nr == "A little not right", 2)
data$puzzle_ability <-replace(data$puzzle_ability, data$puzzle_ability_nr == "Really not right", 1)

data$puzzle_interest <-replace(data$puzzle_interest, data$puzzle_interest_r == "Really right", 4)
data$puzzle_interest <-replace(data$puzzle_interest, data$puzzle_interest_r == "A little right", 3)
data$puzzle_interest <-replace(data$puzzle_interest, data$puzzle_interest_nr == "A little not right", 2)
data$puzzle_interest <-replace(data$puzzle_interest, data$puzzle_interest_nr == "Really not right", 1)

data$puzzle_structural <-replace(data$puzzle_structural, data$puzzle_structural_r == "Really right", 4)
data$puzzle_structural <-replace(data$puzzle_structural, data$puzzle_structural_r == "A little right", 3)
data$puzzle_structural <-replace(data$puzzle_structural, data$puzzle_structural_nr == "A little not right", 2)
data$puzzle_structural <-replace(data$puzzle_structural, data$puzzle_structural_nr == "Really not right", 1)

data$puzzle_control <-replace(data$puzzle_control, data$puzzle_control_r == "Really right", 4)
data$puzzle_control <-replace(data$puzzle_control, data$puzzle_control_r == "A little right", 3)
data$puzzle_control <-replace(data$puzzle_control, data$puzzle_control_nr == "A little not right", 2)
data$puzzle_control <-replace(data$puzzle_control, data$puzzle_control_nr == "Really not right", 1)
```

```{r}
#| label: Closed-ended-robot
#| include: False

df.1.ratings <- data %>%
  pivot_longer(cols = c(robot_structural, robot_ability, robot_interest, robot_control),
               names_to = "explanation",
               values_to = "rating")
df.1.ratings$explanation <- factor(df.1.ratings$explanation, 
                                   levels = c("robot_structural", "robot_ability", "robot_interest", "robot_control"),
                                   labels = c("Structural", "Intrinsic-ability", "Intrinsic-interest", "Random"))

```

```{r}
#| label: Analysis-LM-Robot

#Compared to Baseline

data$Condition <- factor(data$Condition, levels = c("Baseline","Between", "Within"))

# Structural 
linear.struc <- lm(robot_structural ~ Condition, data = data)
summary(linear.struc)

# Ability 
linear.abil <- lm(robot_ability ~ Condition, data = data)
summary(linear.abil)

# Interest
linear.inter <- lm(robot_interest ~ Condition, data = data)
summary(linear.inter)

# Random 
linear.random <- lm(robot_control ~ Condition, data = data)
summary(linear.random)
```

```{r}
#Between vs Within

data$Condition <- factor(data$Condition, levels = c("Between", "Baseline", "Within"))

# Structural 
linear.struc.bw <- lm(robot_structural ~ Condition, data = data)
summary(linear.struc.bw)

# Ability 
linear.abil.bw <- lm(robot_ability ~ Condition, data = data)
summary(linear.abil.bw)

# Interest 
linear.inter.bw <- lm(robot_interest ~ Condition, data = data)
summary(linear.inter.bw)

# Random 
linear.random.bw <- lm(robot_control ~ Condition, data = data)
summary(linear.random.bw)
```


```{r}
#| label: fig-Bar-graph-robot
#| fig-cap: 'Robot Building Close-Ended Explanations: Explanation Types by Condition' 
#| fig-height: 4  
#| fig-width: 6  
#| apa-note: "Bar graph displaying the mean rating of explanations provided by children across three experimental conditions: Baseline, Between, and Within. The y-axis represents the mean rating of each explanation type, while the x-axis represents the experimental condition. Error bars indicate standard errors."

# Clustered Bar graph
ggplot(df.1.ratings, aes(x = Condition, y = rating, group = explanation, fill = explanation)) +
  geom_bar(stat = "summary", position = "dodge", color = "black") +
  scale_fill_manual(values=c("#1F78B4","#FBB4AE","#fbaecf","snow3")) +
  stat_summary(fun.data="mean_cl_normal", 
               fun.args = list(mult=1), 
               geom ="errorbar", 
               width = .2,
               position = position_dodge(width = .9)) +
# raw data
geom_point(aes(x = Condition, y = rating, group = explanation), 
             shape = 21,
             alpha = .8, 
             position = position_jitterdodge(jitter.width = 0.2, 
                                             jitter.height=0.1, 
                                             dodge.width=0.9),
             color = "white") +
  coord_cartesian(ylim = c(1, 4)) +
  xlab("Condition") +
  ylab("Rating of Explanation") +
  guides(fill=guide_legend(title="Explanation")) +
  theme_bw() + 
  theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
        axis.title = element_text(size = 18),
        axis.text = element_text(size = 16),
        legend.title = element_text(size = 18),
        legend.text = element_text(size = 16),
        legend.position = "right")

```

## Puzzle Solving Closed-ended Questions

```{r}
#| label: Close-ended-puzzle
#| include: false

df.2.ratings <- data %>%
  pivot_longer(cols = c(puzzle_structural, puzzle_ability, puzzle_interest, puzzle_control),
               names_to = "explanation",
               values_to = "rating")

df.2.ratings$explanation <- factor(df.2.ratings$explanation, 
                                   levels = c("puzzle_structural", "puzzle_ability", "puzzle_interest", "puzzle_control"),
                                   labels = c("Structural", "Intrinsic-ability", "Intrinsic-interest", "Random"))


```

```{r}
#Comparison with Baseline

data$Condition <- factor(data$Condition, levels = c("Baseline", "Between", "Within"))

# Structural
linear.puzzle.struc <- lm(puzzle_structural ~ Condition, data = data)
summary(linear.puzzle.struc)

# Ability 
linear.puzzle.abil <- lm(puzzle_ability ~ Condition, data = data)
summary(linear.puzzle.abil)

# Interest
linear.puzzle.inter <- lm(puzzle_interest ~ Condition, data = data)
summary(linear.puzzle.inter)

# Random
linear.puzzle.random <- lm(puzzle_control ~ Condition, data = data)
summary(linear.puzzle.random)

```

```{r}
# Between vs Within
data$Condition <- factor(data$Condition, levels = c("Between", "Baseline", "Within"))

# Structural 
linear.puzzle.struc.bw <- lm(puzzle_structural ~ Condition, data = data)
summary(linear.puzzle.struc.bw)

# Ability 
linear.puzzle.abil.bw <- lm(puzzle_ability ~ Condition, data = data)
summary(linear.puzzle.abil.bw)

# Interest
linear.puzzle.inter.bw <- lm(puzzle_interest ~ Condition, data = data)
summary(linear.puzzle.inter.bw)

# Random
linear.puzzle.random.bw <- lm(puzzle_control ~ Condition, data = data)
summary(linear.puzzle.random.bw)
```

```{r}
#| label: fig-Bar-graph-puzzle
#| fig-cap: 'Puzzle Solving Close-Ended Explanations: Explanation Types by Condition' 
#| fig-height: 4  
#| fig-width: 6  
#| apa-note: "Bar graph displaying the mean rating of explanations provided by children across three experimental conditions: Baseline, Between, and Within. The y-axis represents the mean rating of each explanation type, while the x-axis represents the experimental condition. Error bars indicate standard errors."

# Clustered Bar graph
ggplot(df.2.ratings, aes(x = Condition, y = rating, group = explanation, fill = explanation)) +
    geom_bar(stat = "summary", position = "dodge", color = "black") +
    scale_fill_manual(values=c("#1F78B4","#FBB4AE","#fbaecf","snow3")) +
    stat_summary(fun.data="mean_cl_normal", 
                 fun.args = list(mult=1), 
                 geom ="errorbar", 
                 width = .2,
                 position = position_dodge(width = .9)) +
# raw data
    geom_point(aes(x = Condition, y = rating, group = explanation), 
               shape = 21,
               alpha = .8, 
               position = position_jitterdodge(jitter.width = 0.2, 
                                               jitter.height=0.1, 
                                               dodge.width=0.9),
               color = "white") +
    coord_cartesian(ylim = c(1, 4)) +
    xlab("Condition") +
    ylab("Rating of Explanation") +
    guides(fill=guide_legend(title="Explanation")) +
    theme_bw() + 
    theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
          axis.title = element_text(size = 18),
          axis.text = element_text(size = 16),
          legend.title = element_text(size = 18),
          legend.text = element_text(size = 16),
          legend.position = "right")

```




```{r}
#Comparison across domains - OE
## recoding structural explanation as 1 and intrinsic as 0 (this analysis captures the extent to which children are more likely to provide structural explanations compared to intrinsic explanations)
data$open[data$category == "structural"] = 1
data$open[data$category == "intrinsic"] = 0

#check age or gender effect
logistic.domain <- glm(open ~ age+gender, data = data)
summary(logistic.domain)

# interaction effect of condition and domain
logistic.domain <- glm(open ~ condition*trial, data = data)
summary(logistic.domain)

# baseline
data$condition <- factor(data$condition, levels = c("Baseline","Between", "Within"))
data$trial <- factor(data$trial, levels = c("robot","math"))
logistic.domain <- glm(open ~ condition*trial, data = data) 
summary(logistic.domain)

#between
data$condition <- factor(data$condition, levels = c("Between","Baseline","Within"))
logistic.domain <- glm(open ~ condition*trial, data = data) 
summary(logistic.domain)
exp(logistic.domain$coefficients['trialmath']) #odds ratio

#within
data$condition <- factor(data$condition, levels = c("Within","Between","Baseline"))
logistic.domain <- glm(open ~ condition*trial, data = data) 
summary(logistic.domain)
exp(logistic.domain$coefficients['trialmath']) #odds ratio

```



```{r}
#Comparison across domains - CE
## 1. structural-interest difference score
data$rating <- data$rate.struc - data$rate.intrnsc.interest

#check age or gender effect
lme.domain<-lme(rating ~ age+gender, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)
lme.domain.std<-lme(scale(rating) ~ age+gender, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain.std)

#interaction of condition and domain
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)
anova(lme.domain)
eta_squared(lme.domain)

#baseline
data$condition <- factor(data$condition, levels = c("Baseline","Between", "Within"))
data$trial <- factor(data$trial, levels = c("robot","math"))
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)

#between
data$condition <- factor(data$condition, levels = c("Between", "Baseline","Within"))
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)
lme.domain.std<-lme(scale(rating) ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain.std)

#within
data$condition <- factor(data$condition, levels = c("Within","Between", "Baseline"))
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)
lme.domain.std<-lme(scale(rating) ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain.std)


## 2. structural-ability difference score
data$rating <- data$rate.struc - data$rate.intrnsc.ability

#check age or gender effect
lme.domain<-lme(rating ~ age+gender, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)
lme.domain.std<-lme(scale(rating) ~ age+gender, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain.std)

#interaction of condition and domain
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)
anova(lme.domain)
eta_squared(lme.domain)

#baseline
data$condition <- factor(data$condition, levels = c("Baseline","Between", "Within"))
data$trial <- factor(data$trial, levels = c("robot","math"))
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)

#between
data$condition <- factor(data$condition, levels = c("Between", "Baseline","Within"))
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)

#within
data$condition <- factor(data$condition, levels = c("Within","Between", "Baseline"))
lme.domain<-lme(rating ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain)
lme.domain.std<-lme(scale(rating) ~ condition*trial, random = ~ 1 | ID, data=data, na.action=na.exclude, method="ML")
summary(lme.domain.std)

```


# Discussion

## Limitations and Future Directions

## Conclusion

\newpage

# References

<!-- References will auto-populate in the refs div below -->

::: {#refs}
:::

# Appendix